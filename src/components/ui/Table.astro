---
interface Props {
    data: any[];
    showAction?: boolean;
    [key: string]: any;
}

const { data = [], showAction = false } = Astro.props as Props;

// Derive columns from the keys of the first object in the data array
const columns = data.length > 0 ? Object.keys(data[0]) : [];

// Function to transform column names
const transformColumnName = (columnName: string) => {
    return columnName
        .split('_')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1))
        .join(' ');
};

console.log('Columns:', columns);
console.log('Data:', data);
---

<div class="overflow-x-auto">
    <div class="p-1.5 min-w-full inline-block align-middle">
        <div class="overflow-hidden">
            <table
                class="min-w-full divide-y divide-light-background-400 dark:divide-dark-background-500"
            >
                <thead>
                    <tr>
                        {columns.map(column => (
                            <th
                                scope="col"
                                class="px-6 py-3 text-start text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
                            >
                                {transformColumnName(column)}
                            </th>
                        ))}
                        {showAction && (
                            <th
                                scope="col"
                                class="px-6 py-3 text-end text-xs font-medium text-gray-500 uppercase dark:text-neutral-500"
                            >
                                Action
                            </th>
                        )}
                    </tr>
                </thead>
                <tbody class="divide-y divide-gray-200 dark:divide-neutral-700">
                    {data.map(row => (
                        <tr class="hover:bg-gray-100 dark:hover:bg-neutral-700">
                            {columns.map(column => (
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-800 dark:text-neutral-200">
                                    {row[column]}
                                </td>
                            ))}
                            {showAction && (
                                <td class="px-6 py-4 whitespace-nowrap text-end text-sm font-medium">
                                    <button
                                        type="button"
                                        class="inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent text-blue-600 hover:text-blue-800 focus:outline-none focus:text-blue-800 disabled:opacity-50 disabled:pointer-events-none dark:text-blue-500 dark:hover:text-blue-400 dark:focus:text-blue-400"
                                    >
                                        Delete
                                    </button>
                                </td>
                            )}
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    </div>
</div>
