---
interface Props {
  id?: string;
  name: "solid" | "outline" | "white" | "ghost";
  icon?: {
    start?: boolean;
    end?: boolean;
    name: string;
    class: string;
    size: number;
  };
  text?: string;
  disabled?: boolean;
  [key: string]: any;
}
import { Icon } from "astro-icon/components";
const {
  id,
  name,
  icon,
  text,
  disabled = false,
  ...rest
} = Astro.props as Props;
const buttonStyles = [
  {
    name: "solid",
    class:
      "w-full py-3 px-4 flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent bg-primary text-white hover:bg-primary-700 focus:outline-none disabled:opacity-50 disabled:pointer-events-none transition-all duration-200 ease-in-out",
  },
  {
    name: "outline",
    class:
      "w-full py-3 px-4 flex justify-center items-center gap-x-2 text-sm rounded-lg border border-light-foreground-300 hover:border-primary hover:text-primary focus:outline-none disabled:opacity-50 disabled:pointer-events-none dark:border-dark-foreground-700 dark:hover:text-primary-500 dark:hover:border-primary-500 transition-all duration-200 ease-in-out",
  },
  {
    name: "white",
    class:
      "w-full py-3 px-4 flex justify-center items-center gap-x-2 text-sm rounded-lg border border-light-background-300 hover:bg-light-background-100 disabled:opacity-50 disabled:pointer-events-none dark:border-dark-foreground-700 dark:hover:bg-dark-foreground-800 transition-all duration-200 ease-in-out",
  },
  {
    name: "ghost",
    class:
      "w-full py-3 px-4 flex justify-center items-center gap-x-2 text-sm rounded-lg border border-transparent text-light-foreground-300 hover:text-light-foreground dark:text-dark-foreground-500 dark:hover:text-dark-foreground focus:text-light-foreground dark:focus:text-dark-foreground  hover:bg-light-background-100 dark:hover:bg-dark-background-900 focus:bg-light-background-100 dark:focus:bg-dark-background-900 focus:outline-none disabled:opacity-50 disabled:pointer-events-none",
  },
];
const buttonClass =
  buttonStyles.find((style) => style.name === name)?.class || "";
---

<button id={id} class={buttonClass} disabled={disabled} {...rest}>
  {icon?.start && <Icon name={icon.name} class={icon.class} size={icon.size} />}
  {text}
  {icon?.end && <Icon name={icon.name} class={icon.class} size={icon.size} />}
  <slot />
</button>
