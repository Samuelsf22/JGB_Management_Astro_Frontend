---
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardFooter,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Button } from "@/components/ui/button";
import { registerParent } from "@services/student/student";

const params = new URL(Astro.request.url).searchParams;
let showToast = params.has("toast");
let toastMessage = params.get("message") || "";
let toastType: "success" | "error" =
  (params.get("type") as "success" | "error") || "success";

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const dni = data.get("dni")?.toString().trim();
    const first_name = data.get("first_name")?.toString().trim();
    const last_name = data.get("last_name")?.toString().trim();
    const phone_number = data.get("phone_number")?.toString().trim();
    const address = data.get("address")?.toString().trim();

    if (!dni) {
      showToast = true;
      toastMessage = "DNI is required";
      toastType = "error";
      throw new Error("DNI is required");
    }

    if (!first_name) {
      showToast = true;
      toastMessage = "First name is required";
      toastType = "error";
      throw new Error("First name is required");
    }

    if (!last_name) {
      showToast = true;
      toastMessage = "Last name is required";
      toastType = "error";
      throw new Error("Last name is required");
    }

    if (!phone_number) {
      showToast = true;
      toastMessage = "Phone number is required";
      toastType = "error";
      throw new Error("Phone number is required");
    }

    const request = await registerParent({
      id_parent: 0,
      dni,
      first_name,
      last_name,
      phone_number,
      address: address || "",
    });

    showToast = true;
    toastMessage = "Parent registered successfully!";
    toastType = "success";
  } catch (error) {
    showToast = true;
    toastType = "error";
    if (error instanceof Response) {
      const errorData = await error.json();
      toastMessage = Object.values(errorData).flat().join(", ");
    } else {
      toastMessage =
        error instanceof Error ? error.message : "Error registering parent";
    }
  }
}
---

<Card className="max-w-lg mx-auto rounded-lg">
  <CardHeader>
    <CardTitle>Register Parent</CardTitle>
  </CardHeader>
  <CardContent>
    <form method="POST" class="grid gap-4 py-4">
      <div class="grid grid-cols-4 items-center gap-4">
        <Label htmlFor="dni" className="right">DNI</Label>
        <Input
          type="text"
          name="dni"
          id="dni"
          placeholder="Enter DNI"
          className="col-span-3"
          required
        />
      </div>
      <div class="grid grid-cols-4 items-center gap-4">
        <Label htmlFor="first_name" className="right">First Name</Label>
        <Input
          type="text"
          name="first_name"
          id="first_name"
          placeholder="Enter first name"
          className="col-span-3"
          required
        />
      </div>
      <div class="grid grid-cols-4 items-center gap-4">
        <Label htmlFor="last_name" className="right">Last Name</Label>
        <Input
          type="text"
          name="last_name"
          id="last_name"
          placeholder="Enter last name"
          className="col-span-3"
          required
        />
      </div>
      <div class="grid grid-cols-4 items-center gap-4">
        <Label htmlFor="phone_number" className="right">Phone Number</Label>
        <Input
          type="tel"
          name="phone_number"
          id="phone_number"
          placeholder="Enter phone number"
          className="col-span-3"
          required
        />
      </div>
      <div class="grid grid-cols-4 items-center gap-4">
        <Label htmlFor="address" className="right">Address</Label>
        <Input
          type="text"
          name="address"
          id="address"
          placeholder="Enter address"
          className="col-span-3"
        />
      </div>
    </form>
  </CardContent>
  <CardFooter className="flex justify-end">
    <Button id="save-parent" type="submit" variant="default"> Submit </Button>
  </CardFooter>
</Card>
